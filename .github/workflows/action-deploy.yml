name: Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose action to perform'
        required: true
        default: 'apply'
        options:
          - 'apply'
          - 'destroy'

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.8.4

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      if: github.event.inputs.action == 'apply'
      run: terraform apply -auto-approve

    - name: Get Terraform Outputs
      if: github.event.inputs.action == 'apply'
      id: terraform_outputs
      run: echo "::set-output name=docker_machine_public_ip::$(terraform output Docker-Machine-public-ip)"
           echo "::set-output name=docker_machine_private_ip::$(terraform output Docker-Machine-private-ip)"
           echo "::set-output name=docker_machine_ssh_command::$(terraform output Docker-Machine-ssh-command)"

    - name: Save Terraform Private Key as Artifact
      if: github.event.inputs.action == 'apply'
      run: echo "::set-output name=private_key_path::$(terraform output private_key_path)"
      shell: bash

    - name: Upload SSH Key as artifact
      if: github.event.inputs.action == 'apply'
      uses: actions/upload-artifact@v2
      with:
        name: deployer-key
        path: ${{ steps.save_private_key.outputs.private_key_path }}

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: terraform destroy -auto-approve
